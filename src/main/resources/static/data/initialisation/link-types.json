[
	{
		"name" : "Decomposition",
		"long_name" : "Is a Decomposition Of",
		"description" : "Captures part-whole relationships between requirement artifacts. Typically, these types of links represent artifact hierarchies.",
		"enabled" : "1",
		"default" : "0"
	},
	{
		"name" : "Refines",
		"long_name" : "Refines",
		"description" : "",
		"enabled" : "1",
		"default" : "0"
	},
	{
		"name" : "Referenced",
		"long_name" : "Referenced By or References",
		"description" : "Tracks a relationship between requirement artifacts. These types of relationships occur when creating links between artifacts.",
		"enabled" : "1",
		"default" : "0"
	},
	{
		"name" : "Mitigates",
		"long_name" : "Mitigates",
		"description" : "Captures the relationship between requirements and risks. A requirement mitigates one or more risks, and a risk is mitigated by one or more requirements.",
		"enabled" : "1",
		"default" : "0"
	},
	{
		"name" : "Links",
		"long_name" : "Links To",
		"description" : "Tracks a general relationship between requirement artifacts.",
		"enabled" : "1",
		"default" : "0"
	},
	{
		"name" : "Refers",
		"long_name" : "Refers To",
		"description" : "",
		"enabled" : "1",
		"default" : "0"
	},
	{
		"name" : "Embedded",
		"long_name" : "Is Embedded In",
		"description" : "Tracks a containment relationship between RM artifacts. These types of relationships occur when you complete operations such as inserting an artifact and inserting an image for a text artifact.",
		"enabled" : "1",
		"default" : "0"
	},
	{
		"name" : "Illustrates",
		"long_name" : "Illustrates",
		"description" : "Illustrates the relationships between graphical and text artifacts.",
		"enabled" : "1",
		"default" : "0"
	},
	{
		"name" : "Extracted",
		"long_name" : "Is Extracted From",
		"description" : "Captures when the content of a requirement artifact was created from the contents of another requirement artifact. This type of link is created during extraction-based operations; for example, when you create an artifact by saving an existing artifact as a new artifact.",
		"enabled" : "1",
		"default" : "0"
	},
	{
		"name" : "Satisfies",
		"long_name" : "Satisfies or Is satisfied By",
		"description" : "Captures how the different levels of requirements are elaborated. For example: an approved vision statement in a vision document can be satisfied by one or more stakeholder requirements.",
		"enabled" : "1",
		"default" : "0"
	},
	{
		"name" : "Tracks",
		"long_name" : "Tracks or Is Tracked By",
		"description" : "Captures the relationship between a requirement artifact and a change management item that tracks the implementation of the requirement artifact. For example, a task in the CCM application can track the implementation of a requirement artifact. In the CCM application, links of this type are shown as Tracks links.",
		"enabled" : "1",
		"default" : "0"
	},
	{
		"name" : "Derived",
		"long_name" : "Is Derived From",
		"description" : "Captures the relationship between a requirement artifact and an architecture management item that represents a model of the requirement artifact. For example, a UML use case in an architecture management application can represent a requirement artifact. In architecture management applications, links of this type are shown as Derives From Architecture Element links.",
		"enabled" : "1",
		"default" : "1"
	},
	{
		"name" : "Affected",
		"long_name" : "Is Affected By",
		"description" : "Captures the relationship between a requirement artifact and a change management item that affects the implementation of the requirement artifact. For example, a defect in the Change and Configuration Management (CCM) application can affect the implementation of a requirement artifact. In the CCM application, links of this type are shown as Affects links.",
		"enabled" : "1",
		"default" : "0"
	},
	{
		"name" : "Validates",
		"long_name" : "Validates",
		"description" : "Captures the relationship between a requirement artifact and a test artifact that validates the implementation of the requirement artifact. For example, a test plan in the Quality Management (QM) application can validate the implementation of a requirement artifact. In the QM application, links of this type are displayed as Validates links.",
		"enabled" : "1",
		"default" : "0"
	},
	{
		"name" : "Constrained",
		"long_name" : "Is Constrained By",
		"description" : "Captures the relationship between requirement artifacts when one artifact limits or holds back the other artifact. For example, an artifact can be constrained by a requirement that it must conform to",
		"enabled" : "1",
		"default" : "0"
	},
	{
		"name" : "Implements",
		"long_name" : "Implements",
		"description" : "Captures the relationship between a requirement artifact and a change management item that describes the implementation of the requirement artifact. For example, a story in the CCM application can describe the implementation of a requirement artifact. In the CCM application, links of this type are shown as Implements links.",
		"enabled" : "1",
		"default" : "0"
	}
]
